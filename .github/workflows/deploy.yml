name: Deploy Angular Shell (Blue-Green Unit Tests)

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}
      AWS_REGION: us-east-1

    steps:
      # 1Ô∏è‚É£ Checkout do c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3Ô∏è‚É£ Instalar depend√™ncias
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Build Angular Shell
      - name: Build Angular Shell
        run: npm run build -- --configuration production

      # 5Ô∏è‚É£ Executar testes unit√°rios
      - name: Run unit tests
        run: |
          echo "Running Angular unit tests"
          npm run test -- --watch=false --browsers=ChromeHeadless
        # O workflow falha automaticamente se os testes unit√°rios falharem

      # 6Ô∏è‚É£ Configurar AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 7Ô∏è‚É£ Detectar vers√£o ativa e inativa
      - name: Detect active version
        id: detect
        run: |
          ACTIVE=$(aws cloudfront get-distribution --id $CLOUDFRONT_ID | jq -r '.Distribution.Origins.Items[0].OriginPath')
          if [[ "$ACTIVE" == "/blue" ]]; then
            echo "ACTIVE=blue" >> $GITHUB_ENV
            echo "INACTIVE=green" >> $GITHUB_ENV
          else
            echo "ACTIVE=green" >> $GITHUB_ENV
            echo "INACTIVE=blue" >> $GITHUB_ENV
          fi
          echo "Active version: $ACTIVE"
          echo "Inactive version: $INACTIVE"

      # 8Ô∏è‚É£ Deploy build para pasta inativa
      - name: Deploy to INACTIVE folder
        run: |
          echo "Deploying build to folder $INACTIVE"
          aws s3 sync ./dist/vyracare-app-shell s3://$S3_BUCKET_NAME/$INACTIVE --delete

      # 9Ô∏è‚É£ Swap CloudFront para nova vers√£o somente se testes passarem
      - name: Swap CloudFront to INACTIVE
        if: success()
        run: |
          DISTRIBUTION_CONFIG=$(aws cloudfront get-distribution-config --id $CLOUDFRONT_ID)
          ETAG=$(echo $DISTRIBUTION_CONFIG | jq -r '.ETag')
          CONFIG=$(echo $DISTRIBUTION_CONFIG | jq '.DistributionConfig')
          UPDATED_CONFIG=$(echo $CONFIG | jq --arg path "/$INACTIVE" '.Origins.Items[0].OriginPath=$path')
          aws cloudfront update-distribution --id $CLOUDFRONT_ID --if-match $ETAG --distribution-config "$UPDATED_CONFIG"

      # üîü Invalida√ß√£o de cache
      - name: Invalidate CloudFront cache
        if: success()
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"

      # 1Ô∏è‚É£1Ô∏è‚É£ Rollback ou notifica√ß√£o em caso de falha
      - name: Rollback notification
        if: failure()
        run: |
          echo "Unit tests failed! CloudFront still points to $ACTIVE. Rollback not required, version active n√£o foi alterada."
