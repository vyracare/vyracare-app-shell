name: Angular CD Blue-Green

on:
  workflow_run:
    workflows: ["Angular CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    env:
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}
      AWS_REGION: us-east-1

    steps:
      - name: Download CI artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-dist
          path: dist/vyracare-app-shell

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Detect active version
        id: detect
        run: |
          ACTIVE=$(aws cloudfront get-distribution --id $CLOUDFRONT_ID | jq -r '.Distribution.Origins.Items[0].OriginPath')
          if [[ "$ACTIVE" == "/blue" ]]; then
            INACTIVE="green"
          else
            INACTIVE="blue"
          fi
          echo "ACTIVE=$ACTIVE" >> $GITHUB_ENV
          echo "INACTIVE=$INACTIVE" >> $GITHUB_ENV
          echo "previous-path=$ACTIVE" >> $GITHUB_OUTPUT

      - name: Deploy to inactive folder
        run: aws s3 sync dist/vyracare-app-shell s3://$S3_BUCKET_NAME/$INACTIVE --delete

      - name: Swap CloudFront
        run: |
          DISTRIBUTION_CONFIG=$(aws cloudfront get-distribution-config --id $CLOUDFRONT_ID)
          ETAG=$(echo $DISTRIBUTION_CONFIG | jq -r '.ETag')
          CONFIG=$(echo $DISTRIBUTION_CONFIG | jq '.DistributionConfig')
          UPDATED_CONFIG=$(echo $CONFIG | jq --arg path "/$INACTIVE" '.Origins.Items[0].OriginPath=$path')
          aws cloudfront update-distribution --id $CLOUDFRONT_ID --if-match $ETAG --distribution-config "$UPDATED_CONFIG"

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"

      - name: Rollback if failure detected
        if: failure()
        run: |
          DISTRIBUTION_CONFIG=$(aws cloudfront get-distribution-config --id $CLOUDFRONT_ID)
          ETAG=$(echo $DISTRIBUTION_CONFIG | jq -r '.ETag')
          CONFIG=$(echo $DISTRIBUTION_CONFIG | jq '.DistributionConfig')
          UPDATED_CONFIG=$(echo $CONFIG | jq --arg path "${{ steps.detect.outputs.previous-path }}" '.Origins.Items[0].OriginPath=$path')
          aws cloudfront update-distribution --id $CLOUDFRONT_ID --if-match $ETAG --distribution-config "$UPDATED_CONFIG"
